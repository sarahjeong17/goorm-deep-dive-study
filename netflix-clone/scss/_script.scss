@use 'sass:math';
@use 'sass:color';

//Unit change
@function rem($size, $pixel: 16){
    $size: math.div($size, $pixel);
    @return #{$size}rem;
}


@mixin shadow($type:box, $size:10px, $color:black, $alpha:0.8){
    #{$type}-shadow: 0 0 $size rgba($color, $alpha);
}

@mixin flex($g:null,$a:center,$j:space-between,$d:null){
    display:flex;
    justify-content: $j;
    align-items: $a;
    gap: $g;
    flex-direction: $d;
}
@mixin formBox($type:null, $size: md){
    // $type : btn, input, line
    border-radius: $radius;
    
    @if $type == btn {
        background-color: $primary;
        &:hover{
            background-color: color.scale($primary, $lightness: -20%);
        }
    } @else if $type == input {
        border:0.5px solid $line;
        background-color: rgba(white, 0.1);
        &:focus{
            border-color: rgba($primary, 0.1);
        }
    } @else if $type == line {
        border: 1px solid $line;
        background-color: transparent;
    }
}

@mixin lineArrow($boxsize, $bdsize, $color, $direction: 'up') {
    width: $boxsize;
    height: $boxsize;
    border-top: $bdsize solid $color;
    border-left: $bdsize solid $color;
  
    @if $direction == 'up' {
      transform: rotate(45deg);
    }
    @else if $direction == 'down' {
      transform: rotate(225deg);
    }
    @else if $direction == 'left' {
      transform: rotate(315deg);
    }
    @else if $direction == 'right' {
      transform: rotate(135deg);
    }
  }
  @mixin bgArrow($bdsize, $boxsize, $bgcolor, $direction: 'up') {
      width: 0;
      height: 0;
      border: $bdsize solid transparent;
    
      @if $direction == 'up' {
        border-bottom: $boxsize solid $bgcolor;
      }
      @else if $direction == 'down' {
        border-top: $boxsize solid $bgcolor;
      }
      @else if $direction == 'left' {
        border-right: $boxsize solid $bgcolor;
      }
      @else if $direction == 'right' {
        border-left: $boxsize solid $bgcolor;
      }
    }